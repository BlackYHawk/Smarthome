apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = []//设置禁止gradle生成Android.mk
            jniLibs.srcDirs = ['src/main/jniLibs']//设置目标的so存放路径
        }
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn 'ndkBuild','copyThirdso', 'copyJniLibs'
    }
}

dependencies {
}


task ndkBuild(type: Exec) {//设置新的so的生成目录

    def ndkBuildingDir = project.plugins.findPlugin('com.android.library').sdkHandler.getNdkFolder().absolutePath
    commandLine ndkBuildingDir + "/ndk-build.cmd", '-C', 'src/main/jni',
            "NDK_OUT=$buildDir/intermediates/ndk/obj",
            "NDK_APP_DST_DIR=$buildDir/intermediates/ndk/libs/\$(TARGET_ARCH_ABI)"
}

task copyJniLibs(type: Copy) {//将新生成的so拷贝到jniLibs目录
    from fileTree(dir: file(buildDir.absolutePath + '/intermediates/ndk/libs'), include: '**/*.so')
    into file('src/main/jniLibs')
}

task copyThirdso(type: Copy) {//将第三方的so拷贝到jniLibs目录
    from file('src/main/jni/vvw/libs')
    into file('src/main/jniLibs')
}


