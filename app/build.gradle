apply plugin: 'com.android.model.application'

// Root of 3rd party lib(s): location could be anywhere on the host system
def lib_distribution_root = '../distribution'
model {
    repositories {
        libs(PrebuiltLibraries) {
            // Configure one pre-built lib: shared
            json {
                headers.srcDir "${lib_distribution_root}/json/include"
                // Inform Android Studio where lib is -- each ABI should have a lib file
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/json/lib/${targetPlatform.getName()}/libjson.so")
                }
            }
            // Configure another pre-built lib: shared;[change to static after Studio supports]
            // static lib generation. USING static lib is supported NOW, for that case,
            // simple change:
            //  SharedLibaryBinary --> StaticLibraryBinary
            //  sharedLibraryFile  --> staticLibraryFile
            //  *.so --> *.a
            mp4v2 {
                headers.srcDir "${lib_distribution_root}/mp4v2/include"
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/mp4v2/lib/${targetPlatform.getName()}/libmp4v2.so")
                }
            }
        }
    }
    android {
        compileSdkVersion 24
        buildToolsVersion "24.0.1"

        defaultConfig {
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 24
            versionCode 1
            versionName "1.0"
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }
        sources {
            main {
                jni {
                    dependencies {
                        library 'json' linkage 'shared'
                        // if gperf were *.a, change shared --> static
                        library 'mp4v2' linkage 'shared'
                    }
                }
                jniLibs {
                    // for shared lib, lib need to be pushed to the target too
                    // Once libs are copied into app/src/main/jniLibs directory,
                    // Android Studio will pack them into APK's lib/ directory
                    // Here we like to avoid another duplication by pointing
                    // to the files that containing our libs' distribution location
                    // so the same file is used by compiler at host, also packed
                    // into APk to be used at Target (phone/tablet)
                    source {
                        srcDir "${lib_distribution_root}/json/lib"
                        srcDir "${lib_distribution_root}/mp4v2/lib"
                    }
                }
            }
        }
    }
}

dependencies {
    println rootProject.getName()
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:24.1.1"
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('compile')) {
        task.dependsOn ':jsoncpp:distributeLib'
        task.dependsOn ':mp4v2:distributeLib'
    }
}
